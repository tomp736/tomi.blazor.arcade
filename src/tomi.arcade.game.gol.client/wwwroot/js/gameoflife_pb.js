// source: gameoflife.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.gameoflife.GameOfLifeSettings', null, global);
goog.exportSymbol('proto.gameoflife.GameStateRequest', null, global);
goog.exportSymbol('proto.gameoflife.GameStateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameoflife.GameStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gameoflife.GameStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gameoflife.GameStateRequest.displayName = 'proto.gameoflife.GameStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameoflife.GameStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gameoflife.GameStateResponse.repeatedFields_, null);
};
goog.inherits(proto.gameoflife.GameStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gameoflife.GameStateResponse.displayName = 'proto.gameoflife.GameStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gameoflife.GameOfLifeSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gameoflife.GameOfLifeSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gameoflife.GameOfLifeSettings.displayName = 'proto.gameoflife.GameOfLifeSettings';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gameoflife.GameStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gameoflife.GameStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gameoflife.GameStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameoflife.GameStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gamesettings: (f = msg.getGamesettings()) && proto.gameoflife.GameOfLifeSettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameoflife.GameStateRequest}
 */
proto.gameoflife.GameStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gameoflife.GameStateRequest;
  return proto.gameoflife.GameStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameoflife.GameStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameoflife.GameStateRequest}
 */
proto.gameoflife.GameStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameid(value);
      break;
    case 2:
      var value = new proto.gameoflife.GameOfLifeSettings;
      reader.readMessage(value,proto.gameoflife.GameOfLifeSettings.deserializeBinaryFromReader);
      msg.setGamesettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameoflife.GameStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gameoflife.GameStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameoflife.GameStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameoflife.GameStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGamesettings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gameoflife.GameOfLifeSettings.serializeBinaryToWriter
    );
  }
};


/**
 * optional string gameId = 1;
 * @return {string}
 */
proto.gameoflife.GameStateRequest.prototype.getGameid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gameoflife.GameStateRequest} returns this
 */
proto.gameoflife.GameStateRequest.prototype.setGameid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional GameOfLifeSettings gameSettings = 2;
 * @return {?proto.gameoflife.GameOfLifeSettings}
 */
proto.gameoflife.GameStateRequest.prototype.getGamesettings = function() {
  return /** @type{?proto.gameoflife.GameOfLifeSettings} */ (
    jspb.Message.getWrapperField(this, proto.gameoflife.GameOfLifeSettings, 2));
};


/**
 * @param {?proto.gameoflife.GameOfLifeSettings|undefined} value
 * @return {!proto.gameoflife.GameStateRequest} returns this
*/
proto.gameoflife.GameStateRequest.prototype.setGamesettings = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gameoflife.GameStateRequest} returns this
 */
proto.gameoflife.GameStateRequest.prototype.clearGamesettings = function() {
  return this.setGamesettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gameoflife.GameStateRequest.prototype.hasGamesettings = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gameoflife.GameStateResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gameoflife.GameStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gameoflife.GameStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gameoflife.GameStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameoflife.GameStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gamesettings: (f = msg.getGamesettings()) && proto.gameoflife.GameOfLifeSettings.toObject(includeInstance, f),
    gamestateList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameoflife.GameStateResponse}
 */
proto.gameoflife.GameStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gameoflife.GameStateResponse;
  return proto.gameoflife.GameStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameoflife.GameStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameoflife.GameStateResponse}
 */
proto.gameoflife.GameStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameid(value);
      break;
    case 2:
      var value = new proto.gameoflife.GameOfLifeSettings;
      reader.readMessage(value,proto.gameoflife.GameOfLifeSettings.deserializeBinaryFromReader);
      msg.setGamesettings(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addGamestate(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameoflife.GameStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gameoflife.GameStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameoflife.GameStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameoflife.GameStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGamesettings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gameoflife.GameOfLifeSettings.serializeBinaryToWriter
    );
  }
  f = message.getGamestateList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
};


/**
 * optional string gameId = 1;
 * @return {string}
 */
proto.gameoflife.GameStateResponse.prototype.getGameid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gameoflife.GameStateResponse} returns this
 */
proto.gameoflife.GameStateResponse.prototype.setGameid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional GameOfLifeSettings gameSettings = 2;
 * @return {?proto.gameoflife.GameOfLifeSettings}
 */
proto.gameoflife.GameStateResponse.prototype.getGamesettings = function() {
  return /** @type{?proto.gameoflife.GameOfLifeSettings} */ (
    jspb.Message.getWrapperField(this, proto.gameoflife.GameOfLifeSettings, 2));
};


/**
 * @param {?proto.gameoflife.GameOfLifeSettings|undefined} value
 * @return {!proto.gameoflife.GameStateResponse} returns this
*/
proto.gameoflife.GameStateResponse.prototype.setGamesettings = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gameoflife.GameStateResponse} returns this
 */
proto.gameoflife.GameStateResponse.prototype.clearGamesettings = function() {
  return this.setGamesettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gameoflife.GameStateResponse.prototype.hasGamesettings = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated int32 gameState = 3;
 * @return {!Array<number>}
 */
proto.gameoflife.GameStateResponse.prototype.getGamestateList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.gameoflife.GameStateResponse} returns this
 */
proto.gameoflife.GameStateResponse.prototype.setGamestateList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.gameoflife.GameStateResponse} returns this
 */
proto.gameoflife.GameStateResponse.prototype.addGamestate = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gameoflife.GameStateResponse} returns this
 */
proto.gameoflife.GameStateResponse.prototype.clearGamestateList = function() {
  return this.setGamestateList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gameoflife.GameOfLifeSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.gameoflife.GameOfLifeSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gameoflife.GameOfLifeSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameoflife.GameOfLifeSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    width: jspb.Message.getFieldWithDefault(msg, 1, 0),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    chunksize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gameoflife.GameOfLifeSettings}
 */
proto.gameoflife.GameOfLifeSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gameoflife.GameOfLifeSettings;
  return proto.gameoflife.GameOfLifeSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gameoflife.GameOfLifeSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gameoflife.GameOfLifeSettings}
 */
proto.gameoflife.GameOfLifeSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChunksize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gameoflife.GameOfLifeSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gameoflife.GameOfLifeSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gameoflife.GameOfLifeSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gameoflife.GameOfLifeSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getChunksize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 width = 1;
 * @return {number}
 */
proto.gameoflife.GameOfLifeSettings.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gameoflife.GameOfLifeSettings} returns this
 */
proto.gameoflife.GameOfLifeSettings.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.gameoflife.GameOfLifeSettings.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gameoflife.GameOfLifeSettings} returns this
 */
proto.gameoflife.GameOfLifeSettings.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 chunkSize = 3;
 * @return {number}
 */
proto.gameoflife.GameOfLifeSettings.prototype.getChunksize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gameoflife.GameOfLifeSettings} returns this
 */
proto.gameoflife.GameOfLifeSettings.prototype.setChunksize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.gameoflife);
